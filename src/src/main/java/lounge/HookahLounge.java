package lounge;

import queue.QueueManager;
import visitor.Visitor;

import java.io.*;
import java.net.URISyntaxException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;

public class HookahLounge {
    private final List<Hookah> hookahs;
    private final QueueManager queueManager = QueueManager.getInstance();

    public HookahLounge(int numOfHookahs) {
        this.hookahs = createHookahs(numOfHookahs);
        loadVisitorsFromTxt(); // –ó–ê–ì–†–£–ó–ö–ê –ü–û–°–ï–¢–ò–¢–ï–õ–ï–ô –ò–ó TXT
    }

    private List<Hookah> createHookahs(int numOfHookahs) {
        return java.util.stream.IntStream.range(1, numOfHookahs + 1)
                .mapToObj(Hookah::new)
                .toList();
    }

    // ‚úÖ –ß–¢–ï–ù–ò–ï –ü–û–°–ï–¢–ò–¢–ï–õ–ï–ô –ò–ó TXT-–§–ê–ô–õ–ê
    private void loadVisitorsFromTxt() {

        ClassLoader classLoader = HookahLounge.class.getClassLoader();
        URL resource = classLoader.getResource("visitors.txt");

        if (resource == null) {
           // logger.error("File not found: {}","visitors.txt");
            throw new IllegalArgumentException("File not found: " + "visitors.txt");
        }


        try (BufferedReader reader = new BufferedReader(new FileReader( new File(resource.toURI())))) {
            String line;
            List<Visitor> visitors = new ArrayList<>();
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(" "); // –†–∞–∑–¥–µ–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –ø–æ –ø—Ä–æ–±–µ–ª—É
                if (parts.length == 2) {
                    String name = parts[0]; // –ò–º—è –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
                    boolean isVIP = Boolean.parseBoolean(parts[1]); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º true/false

                    Visitor visitor = new Visitor(name, isVIP); // –°–æ–∑–¥–∞–µ–º –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
                    visitors.add(visitor);
                }
            }

            Random random = new Random();
            for (Visitor visitor : visitors) {
                Hookah assignedHookah = hookahs.get(random.nextInt(hookahs.size())); // –ù–∞–∑–Ω–∞—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –∫–∞–ª—å—è–Ω
                visitor.setHookah(assignedHookah);
                visitor.setQueueManager(queueManager);
                queueManager.executeVisitor(visitor); // –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è
            }
            queueManager.shutdown();
            System.out.println(" –ü–æ—Å–µ—Ç–∏—Ç–µ–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ TXT!");

        } catch (IOException | URISyntaxException e) {
            throw new RuntimeException(e);
        }


    }

    public void startSimulation() {
        System.out.println("üî• –ö–∞–ª—å—è–Ω–Ω–∞—è –æ—Ç–∫—Ä—ã–ª–∞—Å—å!");
    }

    public static void main(String[] args) {
        HookahLounge lounge = new HookahLounge(3); // 3 –∫–∞–ª—å—è–Ω–∞
        lounge.startSimulation();
    }
}
